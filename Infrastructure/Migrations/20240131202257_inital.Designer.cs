// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RetailProcurementContext))]
    [Migration("20240131202257_inital")]
    partial class inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Models.StoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("StoreItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemDescription = "desc1",
                            ItemName = "item1",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            ItemDescription = "desc2",
                            ItemName = "item2",
                            Price = 0m
                        },
                        new
                        {
                            Id = 3,
                            ItemDescription = "desc3",
                            ItemName = "item3",
                            Price = 0m
                        },
                        new
                        {
                            Id = 4,
                            ItemDescription = "desc4",
                            ItemName = "item4",
                            Price = 0m
                        },
                        new
                        {
                            Id = 5,
                            ItemDescription = "desc5",
                            ItemName = "item5",
                            Price = 0m
                        },
                        new
                        {
                            Id = 6,
                            ItemDescription = "desc6",
                            ItemName = "item6",
                            Price = 0m
                        },
                        new
                        {
                            Id = 7,
                            ItemDescription = "desc7",
                            ItemName = "item7",
                            Price = 0m
                        },
                        new
                        {
                            Id = 8,
                            ItemDescription = "desc8",
                            ItemName = "item8",
                            Price = 0m
                        },
                        new
                        {
                            Id = 9,
                            ItemDescription = "desc9",
                            ItemName = "item9",
                            Price = 0m
                        },
                        new
                        {
                            Id = 10,
                            ItemDescription = "desc10",
                            ItemName = "item10",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("Infrastructure.Models.Suplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "desc1",
                            Country = "Germany",
                            Name = "L-SHOP-TEAM GmbH"
                        },
                        new
                        {
                            Id = 2,
                            Address = "desc2",
                            Country = "Netherlands",
                            Name = "Cotton Classic Handels GmbH"
                        },
                        new
                        {
                            Id = 3,
                            Address = "desc3",
                            Country = "Poland",
                            Name = "UTT Europe Kft."
                        },
                        new
                        {
                            Id = 4,
                            Address = "desc4",
                            Country = "Czech Republic",
                            Name = "SIPEC SpA"
                        },
                        new
                        {
                            Id = 5,
                            Address = "desc5",
                            Country = "Greece",
                            Name = "MAXIM Ceramics Sp. z o. o. Sp. k."
                        },
                        new
                        {
                            Id = 6,
                            Address = "desc6",
                            Country = "Spain",
                            Name = "TROIKA Germany GmbH"
                        },
                        new
                        {
                            Id = 7,
                            Address = "desc7",
                            Country = "Spain",
                            Name = "Halfar System GmbH"
                        },
                        new
                        {
                            Id = 8,
                            Address = "desc8",
                            Country = "Poland",
                            Name = "Araco International B.V."
                        },
                        new
                        {
                            Id = 9,
                            Address = "desc9",
                            Country = "Germany",
                            Name = "Clipper B.V."
                        },
                        new
                        {
                            Id = 10,
                            Address = "desc10",
                            Country = "Poland",
                            Name = "Toppoint B.V."
                        });
                });

            modelBuilder.Entity("Infrastructure.Models.SuplierStoreItem", b =>
                {
                    b.Property<int>("StoreItemId")
                        .HasColumnType("int");

                    b.Property<int>("SuplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("SuplierPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StoreItemId", "SuplierId");

                    b.HasIndex("SuplierId");

                    b.ToTable("SuplierStoreItem");

                    b.HasData(
                        new
                        {
                            StoreItemId = 1,
                            SuplierId = 1,
                            SuplierPrice = 10m
                        },
                        new
                        {
                            StoreItemId = 1,
                            SuplierId = 2,
                            SuplierPrice = 20m
                        },
                        new
                        {
                            StoreItemId = 2,
                            SuplierId = 1,
                            SuplierPrice = 30m
                        },
                        new
                        {
                            StoreItemId = 2,
                            SuplierId = 4,
                            SuplierPrice = 40m
                        },
                        new
                        {
                            StoreItemId = 2,
                            SuplierId = 5,
                            SuplierPrice = 55m
                        },
                        new
                        {
                            StoreItemId = 6,
                            SuplierId = 1,
                            SuplierPrice = 70m
                        },
                        new
                        {
                            StoreItemId = 7,
                            SuplierId = 4,
                            SuplierPrice = 100m
                        },
                        new
                        {
                            StoreItemId = 4,
                            SuplierId = 6,
                            SuplierPrice = 22m
                        },
                        new
                        {
                            StoreItemId = 5,
                            SuplierId = 7,
                            SuplierPrice = 22m
                        });
                });

            modelBuilder.Entity("Infrastructure.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Infrastructure.Models.SuplierStoreItem", b =>
                {
                    b.HasOne("Infrastructure.Models.StoreItem", "StoreItem")
                        .WithMany("SuplierStoreItems")
                        .HasForeignKey("StoreItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Models.Suplier", "Suplier")
                        .WithMany("SuplierStoreItems")
                        .HasForeignKey("SuplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreItem");

                    b.Navigation("Suplier");
                });

            modelBuilder.Entity("Infrastructure.Models.StoreItem", b =>
                {
                    b.Navigation("SuplierStoreItems");
                });

            modelBuilder.Entity("Infrastructure.Models.Suplier", b =>
                {
                    b.Navigation("SuplierStoreItems");
                });
#pragma warning restore 612, 618
        }
    }
}
